<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.accp.project.system.project.mapper.ProjectMapper">
    
    <resultMap type="Project" id="ProjectResult">
        <result property="projectId"    column="project_id"    />
        <result property="projectName"    column="project_name"    />
        <result property="deptId"    column="dept_id"    />
        <result property="projectSign"    column="project_sign"    />
        <!-- 
        <association property="dept"    column="dept_id" javaType="Dept" resultMap="deptResult" />
        ofType="ProjectClazz"  javaType="java.util.ArrayList" select="findByProjectId"
        
        <collection property="clazzs" column="project_id"   resultMap="projectClazzResult"></collection>
    
         -->
    </resultMap>
	 
	<resultMap id="projectClazzResult" type="ProjectClazz" >
		<id  property="projectId"   column="project_id"  />
		<result property="clazzId" column="clazz_id"   />
		<association property="clazz"    column="clazz_id" javaType="Clazz" resultMap="clazzResult" />
	</resultMap>
	
	<resultMap type="Clazz" id="clazzResult">
		<id     property="clazzId"     column="clazz_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="clazzName"   column="clazz_name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="leader"     column="leader"      />
		<result property="phone"      column="phone"       />
		<result property="email"      column="email"       />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<resultMap type="Project" id="ProjectAndClazzResult">
        <result property="projectId"    column="project_id"    />
        <result property="projectName"    column="project_name"    />
        <result property="deptId"    column="dept_id"    />
        <result property="projectSign"    column="project_sign"    />
        <!-- 
        <association property="dept"    column="dept_id" javaType="Dept" resultMap="deptResult" />
        ofType="ProjectClazz"  javaType="java.util.ArrayList" select="findByProjectId"
        
        <collection property="clazzs" column="project_id"   resultMap="projectClazzResult"></collection>
    
         -->
         <collection property="clazzs" column="project_id"   ofType="Clazz" select="selectClazzByProjectId" ></collection>
    
    </resultMap>
	
	<select id="selectClazzByProjectId" resultMap="clazzResult" parameterType="Integer" >
  			SELECT c.*FROM sys_clazz c WHERE c.clazz_id  IN (SELECT pc.clazz_id FROM sys_project_clazz pc WHERE pc.`project_id` = #{id})  AND c.clazz_id!=1

  	</select>
	
	<select id="findByProjectId" resultMap="projectClazzResult" parameterType="Integer" >
  			select * from sys_project_clazz pc,sys_clazz c   where project_id=#{id} and pc.clazz_id=c.clazz_id
  	</select>
  	
	<sql id="selectProjectVo">
        <!-- SELECT p.project_id, p.project_name, p.dept_id, p.project_sign,pc.*,sc.*
        FROM sys_project p inner join sys_project_clazz pc on p.project_id = pc.Project_id, sys_clazz sc 
        
        
        SELECT p.project_id, p.project_name, p.dept_id, p.project_sign,pc.clazz_id AS pcid,sc.*
        FROM sys_project p INNER JOIN sys_project_clazz pc ON p.project_id = pc.Project_id, sys_clazz sc 
         -->
        SELECT p.project_id, p.project_name, p.dept_id, p.project_sign
        FROM sys_project p 
    </sql>
	
    <select id="selectProjectList" parameterType="Project" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        <where>  
            <if test="projectId != null "> and p.project_id = #{projectId}</if>
             <if test="projectName != null  and projectName != '' "> and p.project_name like concat('%', #{projectName}, '%')</if>
             <if test="deptId != null "> and p.dept_id = #{deptId}</if>
             <if test="projectSign != null  and projectSign != '' "> and p.project_sign like concat('%', #{projectSign}, '%')</if>
         </where>
         order by p.project_id desc
    </select>
    
    
    <select id="selectProjectListAndClazzs" parameterType="Project" resultMap="ProjectAndClazzResult">
        <include refid="selectProjectVo"/>
        <where>  
            <if test="projectId != null "> and p.project_id = #{projectId}</if>
             <if test="projectName != null  and projectName != '' "> and p.project_name like concat('%', #{projectName}, '%')</if>
             <if test="deptId != null "> and p.dept_id = #{deptId}</if>
             <if test="projectSign != null  and projectSign != '' "> and p.project_sign like concat('%', #{projectSign}, '%')</if>
         </where>
         order by p.project_id desc
    </select>
    
    <select id="selectProjectById" parameterType="Integer" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        where p.project_id = #{projectId}
    </select>
        
    <insert id="insertProject" parameterType="Project" useGeneratedKeys="true" keyProperty="projectId">
        insert into sys_project
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="projectName != null  and projectName != ''  ">project_name,</if>
			<if test="deptId != null  ">dept_id,</if>
			<if test="projectSign != null  and projectSign != ''  ">project_sign,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="projectName != null  and projectName != ''  ">#{projectName},</if>
			<if test="deptId != null  ">#{deptId},</if>
			<if test="projectSign != null  and projectSign != ''  ">#{projectSign},</if>
         </trim>
    </insert>
	 
    <update id="updateProject" parameterType="Project">
        update sys_project
        <trim prefix="SET" suffixOverrides=",">
            <if test="projectName != null  and projectName != ''  ">project_name = #{projectName},</if>
            <if test="deptId != null  ">dept_id = #{deptId},</if>
            <if test="projectSign != null  and projectSign != ''  ">project_sign = #{projectSign},</if>
        </trim>
        where project_id = #{projectId}
    </update>

	<delete id="deleteProjectById" parameterType="Integer">
        delete from sys_project where project_id = #{projectId}
    </delete>
	
    <delete id="deleteProjectByIds" parameterType="String">
        delete from sys_project where project_id in 
        <foreach item="projectId" collection="array" open="(" separator="," close=")">
            #{projectId}
        </foreach>
    </delete>
    
    <select id="checkProjectNameUnique" parameterType="String" resultMap="ProjectResult">
		select * from sys_project where project_name=#{project_name}
	</select>
	
	<select id="checkProjectSignUnique" parameterType="String" resultMap="ProjectResult">
		select * from sys_project where project_sign=#{project_sign}
	</select>
	
</mapper>